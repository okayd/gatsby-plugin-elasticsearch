apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: codeclimate
spec:
  pipelineSpec:
    tasks:
      - name: from-build-pack
        resources: {}
        taskSpec:
          metadata: {}
          stepTemplate:
            env:
              - name: NPM_CONFIG_USERCONFIG
                value: /tekton/home/npm/.npmrc
              - name: NPM_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: gpe-github
                    key: npmToken
              - name: CC_TEST_REPORTER_ID
                valueFrom:
                  secretKeyRef:
                    name: gpe-codeclimate
                    key: testReporterId
            image: uses:jenkins-x/jx3-pipeline-catalog/tasks/typescript/release.yaml@versionStream
            name: ""
            resources:
              requests:
                cpu: 400m
                memory: 512Mi
            volumeMounts:
              - mountPath: /tekton/home/npm
                name: npmrc
            workingDir: /workspace/source
          steps:
            - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
              name: ""
              resources: {}
            - image: ghcr.io/jenkins-x/jx-boot:3.2.394
              name: codeclimate-variables
              resources:
                requests:
                  cpu: 400m
                  memory: 512Mi
              script: |
                #!/usr/bin/env sh
                echo "generate Code Climate variables"
                mkdir -p .jx/
                touch .jx/codeclimate-variables.sh
                echo "# generated by: codeclimate-variables step" >> .jx/codeclimate-variables.sh
                echo "export GIT_BRANCH='$(git branch -a --contains $PULL_BASE_SHA | xargs | rev | cut -d ' ' -f 1 | rev | sed 's/remotes\/origin\///')'" >> .jx/codeclimate-variables.sh
                echo "export GIT_COMMIT_SHA='$(echo $PULL_BASE_SHA)'" >> .jx/codeclimate-variables.sh
                echo "export GIT_COMMITTED_AT='$(git show -s --format=%ct $PULL_BASE_SHA | xargs)'" >> .jx/codeclimate-variables.sh
                cat .jx/codeclimate-variables.sh
            - image: odise/busybox-curl
              name: codeclimate-download
              resources: {}
              script: |
                #!/bin/sh
                echo "downloading CodeClimate binary"
                curl -Ls https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter && chmod +x ./cc-test-reporter
            - name: build-npm-install
              resources: {}
            - image: odise/busybox-curl
              name: codeclimate-before-build
              resources: {}
              script: |
                #!/bin/sh
                source .jx/codeclimate-variables.sh
                ./cc-test-reporter before-build
            - image: node:14-slim
              name: build-npm-jest-coverage
              resources: {}
              script: |
                #!/bin/sh
                CI=true DISPLAY=:99 npm run jest-coverage
            - image: odise/busybox-curl
              name: codeclimate-format-coverage
              resources: {}
              script: |
                #!/bin/sh
                source .jx/codeclimate-variables.sh
                ./cc-test-reporter format-coverage --prefix /workspace/source -t lcov -o coverage/codeclimate.json coverage/lcov.info
            - image: odise/busybox-curl
              name: codeclimate-upload-coverage
              resources: {}
              script: |
                #!/bin/sh
                source .jx/codeclimate-variables.sh
                ./cc-test-reporter upload-coverage -i coverage/codeclimate.json
          volumes:
            - name: npmrc
              secret:
                optional: true
                secretName: npmrc
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 1h0m0s
status: {}
